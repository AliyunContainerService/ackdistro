name: Sealer-Test-Apply

on:
  issue_comment:
    types:
      - created
jobs:
  build:
    name: test
    runs-on: ubuntu-latest
    if: startswith(github.event.comment.body, '/test')
    env:
      GO111MODULE: on
    steps:
      - name: Github API Request
        id: request
        uses: octokit/request-action@v2.0.2
        with:
          route: ${{ github.event.issue.pull_request.url }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{fromJson(steps.request.outputs.data).head.repo.full_name}}
          ref: ${{fromJson(steps.request.outputs.data).head.ref}}
          path: src/github.com/alibaba/sealer

      - name: Set up Go 1.16
        uses: actions/setup-go@v1
        with:
          go-version: 1.16
        id: go

      - name: Install sealer and ginkgo
        shell: bash
        run: |
          wget https://sealer.oss-cn-beijing.aliyuncs.com/ack-k8s1.22/sealer-ipv6/sealer.tar.gz
          sudo tar -xvf sealer.tar.gz -C /usr/bin/
          go get github.com/onsi/ginkgo/ginkgo@v1.16.2
          go get github.com/onsi/gomega/...@v1.12.0
          GOPATH=`go env GOPATH`
          echo "$GOPATH/bin" >> $GITHUB_PATH
        #working-directory: src/github.com/alibaba/sealer

      - name: Run sealer run test
        shell: bash
        working-directory: src/github.com/alibaba/sealer
        env:
          IMAGE_NAME: ${{ secrets.IMAGE_NAME}}
          ACCESSKEYID: ${{ secrets.ACCESSKEYID }}
          ACCESSKEYSECRET: ${{ secrets.ACCESSKEYSECRET }}
          RegionID: ${{ secrets.RegionID }}
        if: startswith(github.event.comment.body, '/test')
        run: |
          set -x
          commentbody="${{github.event.comment.body}}"
          network=`echo "$commentbody"|cut -d" " -f2`
          export network=$network
          e2e=`echo "$commentbody"|cut -d" " -f3`
          export e2e=$e2e
          clean=`echo "$commentbody"|cut -d" " -f4`
          export clean=$clean
          ginkgo -v --focus="test" test