apiVersion: trident.apsara-stack.alibaba-inc.com/v1alpha1
kind: OpsTask
metadata:
  annotations:
    ark.alibaba-inc.com/name_cn: "\u8282\u70B9\u7F51\u7EDC\u8FDE\u901A\u6027"
  labels:
    bizType: checkTask
    check_appset: k8s
    check_product: k8s
  name: check-node-network
  namespace: 'kube-system'
spec:
  broadcast: true
  description: "\u68C0\u67E5\u8282\u70B9\u7F51\u7EDC\u662F\u5426\u8054\u901A"
  period: 3000
  podSpec:
    containers:
    - command:
      - bash
      - -c
      - "#!/bin/bash\n\n# This script check the L2 and L3 network connection from\
        \ this node to others\n\nsource /l0/utils/l0-utils.sh\n\nmyip=$POD_IP\nerrMsg=\"\
        \"\n\n# L3 network\nfor node_ip in ${NODE_IP_LIST[*]}\ndo\n    count=0\n \
        \   while [[ true ]]; do\n        ping -c 1 $node_ip >> /dev/null\n      \
        \  if [ `echo $?` -eq 0 ]; then\n            #echo \"Ping from src:node($myip)\
        \ to dest:node($node_ip) success\"\n            break\n        else\n    \
        \        count=$[${count}+1]\n            if [[ ${count} -eq 2 ]]; then\n\
        \                errMsg=$errMsg\";Ping from src:node($myip) to dest:node($node_ip)\
        \ failed\"\n                echo ${errMsg}\n                break\n      \
        \      fi\n            sleep 1\n        fi\n    done\n\ndone\n\nif [[ \"$errMsg\"\
        \ != \"\" ]];then\n    Record \"NODE_NETWORK_CHECK\" \"network\" \"fail\"\
        \ \"$errMsg\" \"\u68C0\u67E5\u8282\u70B9\u7F51\u7EDC\"\nelse\n    Record \"\
        NODE_NETWORK_CHECK\" \"network\" \"pass\" \"check node network success\" \"\
        \u68C0\u67E5\u8282\u70B9\u7F51\u7EDC\"\nfi\n\nReturn \"${TestResults}\""
      image: '{{.Values.globalconfig.RegistryURL}}/{{.Values.images.opsbasealpine.image}}:{{.Values.images.opsbasealpine.tag}}'
      imagePullPolicy: IfNotPresent
      name: main
    dnsPolicy: ClusterFirstWithHostNet
    hostNetwork: true
    tolerations:
    - effect: NoSchedule
      key: alibabacloud.com/system
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
  privilegeLevel: Cluster
  suspend: {{ .Values.globalconfig.SuspendPeriodHealthCheck }}
  timeout: 600
