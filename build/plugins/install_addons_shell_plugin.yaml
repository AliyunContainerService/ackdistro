apiVersion: sealer.aliyun.com/v1alpha1
kind: Plugin
metadata:
  name: install-addons # Specify this plugin name,will dump in $rootfs/plugin dir.
spec:
  type: SHELL
  action: post-install
  scope: master0
  data: |
    export DNSDomain=${DNSDomain:-cluster.local}
    export HostIPFamily=${HostIPFamily:-4}
    export RegistryIP=${RegistryIP}
    export EnableLocalDNSCache=${EnableLocalDNSCache:-false}
    export MTU=${MTU:-1440}
    export IPIP=${IPIP:-Always}
    export IPv6DualStack=${IPv6DualStack:-false}
    export IPAutoDetectionMethod=${IPAutoDetectionMethod:-can-reach=8.8.8.8}
    export DisableFailureDomain=${DisableFailureDomain:-false}
    export RegistryURL=${RegistryURL:-sea.hub:5000}
    export SuspendPeriodHealthCheck=${SuspendPeriodHealthCheck:-false}
    export SuspendPeriodBroadcastHealthCheck=${SuspendPeriodBroadcastHealthCheck:-false}
    export Addons=${Addons}
    export Network=${Network}
    export RemoveMasterTaint=${RemoveMasterTaint}
    export ApiServerExternalIP=${ApiServerExternalIP}
    export ApiServerExternalPort=${ApiServerExternalPort}
    export IngressExternalIP=${IngressExternalIP}
    export IngressExternalPort=${IngressExternalPort}
    export KUBECONFIG=/etc/kubernetes/admin.conf

    if [ "$HostIPFamily" = "6" ];then
      export SvcCIDR=${SvcCIDR:-4408:4003:10bb:6a01:83b9:6360:c66d:0000/112}
      export PodCIDR=${PodCIDR:-3408:4003:10bb:6a01:83b9:6360:c66d:0000/112}
    else
      export SvcCIDR=${SvcCIDR:-10.96.0.0/16}
      export PodCIDR=${PodCIDR:-100.64.0.0/16}
    fi
    
    # process taints first
    if [ "${RemoveMasterTaint}" == "true" ];then
      kubectl taint node node-role.kubernetes.io/master- --all || true
    fi
    
    if [ "${DeployMode}" = "cnstack" ];then
      infra_nodes=`kubectl get node -l node-role.kubernetes.io/cnstack-infra=`
      if [ "$infra_nodes" == "" ];then
        kubectl label node -l node-role.kubernetes.io/master="" node-role.kubernetes.io/cnstack-infra=""
      fi
      proxy_nodes=`kubectl get node -l node-role.kubernetes.io/proxy=`
      if [ "$proxy_nodes" == "" ];then
        kubectl label node -l node-role.kubernetes.io/master="" node-role.kubernetes.io/proxy=""
      fi
      kubectl taint node -l node-role.kubernetes.io/cnstack-infra="" node-role.kubernetes.io/cnstack-infra:NoSchedule --overwrite || true
      kubectl taint node -l node-role.kubernetes.io/proxy="" node-role.kubernetes.io/cnstack-infra:NoSchedule --overwrite || true
    fi

    bash scripts/install_addons.sh
    if [ $? -ne 0 ];then
      exit 1
    fi

    sleep 15
    trident on-sealer -f /root/.sealer/Clusterfile --sealer --dump-managed-cluster
    if [ $? -ne 0 ];then
      exit 1
    fi

    # set default storageclass and snapshot
    kubectl annotate storageclass yoda-lvm-default snapshot.storage.kubernetes.io/is-default-class="true" --overwrite
    kubectl annotate storageclass yoda-lvm-default storageclass.kubernetes.io/is-default-class="true" --overwrite

    if [ "${SkipHealthCheck}" = "true" ];then
      exit 0
    fi
    sleep 15
    trident health-check
    if [ $? -eq 0 ];then
      exit 0
    fi
    echo "First time health check fail, sleep 30 and try again"
    sleep 30
    trident health-check --trigger-mode OnlyUnsuccessful
    if [ $? -eq 0 ];then
      exit 0
    fi
    echo "Second time health check fail, sleep 60 and try again"
    sleep 60
    trident health-check --trigger-mode OnlyUnsuccessful
    exit $?