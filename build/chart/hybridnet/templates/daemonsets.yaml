apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: hybridnet-daemon
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: hybridnet-daemon
  template:
    metadata:
      labels:
        app: hybridnet-daemon
    spec:
      tolerations:
        - operator: Exists
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      priorityClassName: system-cluster-critical
      serviceAccountName: hybridnet
      hostNetwork: true
      hostPID: true
      initContainers:
        - name: install-cni
          image: "{{ .Values.global.RegistryURL }}/{{ .Values.images.hybridnet.image }}:{{ .Values.images.hybridnet.tag }}"
          imagePullPolicy: {{ .Values.images.hybridnet.imagePullPolicy }}
          command: ["/hybridnet/install-cni.sh"]
          securityContext:
            runAsUser: 0
            privileged: true
          volumeMounts:
            - mountPath: /etc/cni/net.d
              name: cni-conf
            - mountPath: /opt/cni/bin
              name: cni-bin
            - mountPath: /hybridnet/00-hybridnet.conflist
              name: cni-conf-source
              subPath: cni-config
          env:
            - name: NEEDED_COMMUNITY_CNI_PLUGINS
              value: {{ .Values.daemon.neededCommunityCNIPlugins }}
      containers:
        - name: cni-daemon
          image: "{{ .Values.global.RegistryURL }}/{{ .Values.images.hybridnet.image }}:{{ .Values.images.hybridnet.tag }}"
          imagePullPolicy: {{ .Values.images.hybridnet.imagePullPolicy }}
          command:
            - sh
            - /hybridnet/start-daemon.sh
          args:
            {{ if (ne .Values.daemon.preferVxlanInterfaces "") }}
            - --prefer-vxlan-interfaces={{ .Values.daemon.preferVxlanInterfaces }}
            {{ end }}
            {{ if ne .Values.daemon.preferVlanInterfaces "" }}
            - --prefer-vlan-interfaces={{ .Values.daemon.preferVlanInterfaces }}
            {{ end }}
            {{ if ne .Values.daemon.preferBGPInterfaces "" }}
            - --prefer-bgp-interfaces={{ .Values.daemon.preferBGPInterfaces }}
            {{ end }}
            {{ if ne .Values.daemon.vtepAddressCIDRs "" }}
            - --vtep-address-cidrs={{ .Values.daemon.vtepAddressCIDRs }}
            {{ end }}
            - --enable-vlan-arp-enhancement={{ .Values.daemon.enableVlanARPEnhancement }}
            - --feature-gates=MultiCluster={{ .Values.multiCluster }}
          securityContext:
            runAsUser: 0
            privileged: true
          {{- if .Values.daemon.resources }}
          resources:
            {{- toYaml .Values.daemon.resources | trim | nindent 12 }}
          {{- end }}
          env:
            - name: DEFAULT_IP_FAMILY
              value: {{ .Values.defaultIPFamily }}
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          livenessProbe:
            httpGet:
              path: /live
              port: 11021
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
            failureThreshold: 1
          volumeMounts:
            - mountPath: /run/cni
              name: host-run-cni
            - mountPath: /lib/modules
              name: host-modules
            - mountPath: /run/xtables.lock
              name: xtables-lock
            - mountPath: /var/run/
              name: host-var-run
              mountPropagation: Bidirectional
          # TODO: add liveness probe
        {{ if .Values.daemon.enableNetworkPolicy }}
        - name: policy
          image: "{{ .Values.global.RegistryURL }}/{{ .Values.images.hybridnet.image }}:{{ .Values.images.hybridnet.tag }}"
          imagePullPolicy: {{ .Values.images.hybridnet.imagePullPolicy }}
          command:
            - /hybridnet/policyinit.sh
          env:
            - name: NODENAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          {{- if .Values.daemon.policy }}
          {{- if .Values.daemon.policy.resources }}
          resources:
            {{- toYaml .Values.daemon.policy.resources | trim | nindent 12 }}
          {{- end }}
          {{- end }}
          securityContext:
            privileged: true
            runAsUser: 0
        {{ end }}
      nodeSelector:
        kubernetes.io/os: "linux"
      volumes:
        - name: host-modules
          hostPath:
            path: /lib/modules
        - name: host-run-cni
          hostPath:
            path: /run/cni
        - name: cni-conf
          hostPath:
            path: /etc/cni/net.d
        - name: cni-bin
          hostPath:
            path: /opt/cni/bin
        - name: xtables-lock
          hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
        - name: cni-conf-source
          configMap:
            name: hybridnet-cni-conf
            items:
              - key: cni-config
                path: cni-config
        - name: host-var-run
          hostPath:
            path: /var/run/
            type: "Directory"

